# docker-compose.yml

services:
  #--------------------------------
  # Servicio de la API de FastAPI
  #--------------------------------
  api:
    build: .
    # El comando correcto para Uvicorn.
    # Busca 'main.py' en el WORKDIR (/app) y el objeto 'app' dentro de él.
    # Quitamos --reload para mayor estabilidad en producción o a través de túneles.
    command: uvicorn main:app --host 0.0.0.0 --port 8008
    volumes:
      # Monta la carpeta local 'app' en el directorio de trabajo '/app' del contenedor.
      # Esto permite que los cambios en tu código se reflejen sin reconstruir la imagen.
      - ./app:/app
    ports:
      # Expone el puerto 8008 del contenedor al puerto 8008 de tu máquina.
      - "8008:8008"
    env_file:
      # Carga las variables de entorno desde el archivo .env
      - .env
    depends_on:
      # Asegura que el servicio 'db' se inicie antes que la 'api'.
      - db

  #--------------------------------
  # Servicio del Worker
  #--------------------------------
  worker:
    build: .
    # El comando correcto para ejecutar el scheduler como un módulo.
    # Esto resuelve todos los problemas de 'ImportError' relativos.
    command: python -m worker.scheduler
    volumes:
      # Monta la misma carpeta de código para que el worker también vea los cambios.
      - ./app:/app
    env_file:
      # El worker también necesita las variables de entorno para conectar a la BBDD y a los servicios.
      - .env
    depends_on:
      # Asegura que el servicio 'db' se inicie antes que el 'worker'.
      - db

  #--------------------------------
  # Servicio de la Base de Datos
  #--------------------------------
  db:
    image: postgres:15-alpine
    volumes:
      # Persiste los datos de PostgreSQL para que no se pierdan si el contenedor se reinicia.
      - postgres_data:/var/lib/postgresql/data/
    environment:
      # Carga las credenciales de la BBDD desde el archivo .env
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      # Opcional: Expone el puerto de la BBDD si necesitas conectar desde tu PC
      # con una herramienta como DBeaver o pgAdmin. Comenta esta línea si no lo necesitas.
      - "5432:5432"

#--------------------------------
# Volúmenes Nombrados
#--------------------------------
volumes:
  postgres_data:
    # Docker gestiona este volumen.